[versions]
jdk                     = "22"
kotlin                  = "2.0.21"
compose                 = "1.7.1"
jackson                 = "2.18.1"
junit                   = "5.11.3"
slf4j                   = "2.0.16"
firebase_admin          = "9.4.1"
google_api_client       = "2.7.0"
spring                  = "3.4.0"
dependency_management   = "1.1.6"

[plugins]
jetbrains_compose       = { id = "org.jetbrains.compose", version.ref = "compose" }
kotlin_multiplatform    = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose_compiler        = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
springframework         = { id = "org.springframework.boot", version.ref = "spring" }
dependency_management   = { id = "io.spring.dependency-management", version.ref = "dependency_management"}


[libraries]
jackson                 = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
junit_bom               = { module = "org.junit:junit-bom", version.ref = "junit" }
junit_jupiter           = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit_platform_launcher = { module = "org.junit.platform:junit-platform-launcher" }
lombok                  = { module = "org.projectlombok:lombok" }
springboot_data_jpa     = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
springboot_validation   = { module = "org.springframework.boot:spring-boot-starter-validation" }
springboot_web          = { module = "org.springframework.boot:spring-boot-starter-web" }
springboot_hateoas      = { module = "org.springframework.boot:spring-boot-starter-hateoas", version.ref = "spring" }
springboot_test         = { module = "org.springframework.boot:spring-boot-starter-test" }
postgres                = { module = "org.postgresql:postgresql" }
slf4j                   = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
firebase_admin          = { module = "com.google.firebase:firebase-admin", version.ref = "firebase_admin" }
google_api_client       = { module = "com.google.api-client:google-api-client", version.ref = "google_api_client" }
